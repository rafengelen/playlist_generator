name: Build and deliver containers

on: push

jobs:
  preferenceservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver preference-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
      
      - name: Build, test and package project
        working-directory: ./preference-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/preference-service:latest ./preference-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/preferenceservice:latest
  songlibraryservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver songlibrary-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./songlibrary-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/songlibrary-service:latest ./songlibrary-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/songlibrary-service:latest
  playlistservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver playlist-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt
        
      - name: Build, test and package project
        working-directory: ./playlist-service
        run: mvn package -B
        
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/playlist-service:latest ./playlist-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/playlist-service:latest
  #apigateway:
   # runs-on: ubuntu-latest
#    name: Java 17 build, test, deliver ede-api-gateway container
 #   steps:
  #    - name: Check out repository
   #     uses: actions/checkout@v3

    #  - name: Set up JDK 17
     #   uses: actions/setup-java@v3
      #  with:
       #   java-version: 17
        #  cache: maven
         # distribution: adopt

#      - name: Build, test and package project
 #       working-directory: ./api-gateway
  #      run: mvn package -B -DskipTests

   #   - name: Docker login
    #    run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

     # - name: Docker Build
      #  run: docker build --build-arg GOOGLE_CLIENTID=${{ secrets.GOOGLE_CLIENTID }} --build-arg GOOGLE_CLIENTSECRET=${{ secrets.GOOGLE_CLIENTSECRET }} -t ${{ secrets.DOCKER_USERNAME }}/ede-api-gateway:latest ./api-gateway

#      - name: Upload container to Docker Hub with Push
 #       run: docker push ${{ secrets.DOCKER_USERNAME }}/ede-api-gateway:latest